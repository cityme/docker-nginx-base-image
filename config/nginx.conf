user  nginx; # Defines user and group credentials used by worker processes. If group is omitted, a group whose name equals that of user is used.

worker_processes  1; # Defines the number of worker processes.

daemon off; # Determines whether nginx should become a daemon. Mainly used during development.

error_log  /var/log/nginx/error.log warn; # Configures logging.
# The first parameter defines a file that will store the log.
# The second parameter determines the level of logging.

pid        /var/run/nginx.pid;
# Defines a file that will store the process ID of the main process.

events {
    worker_connections  1024;
}
# Provides the configuration file context in which the directives that affect connection processing are specified.
# Sets the maximum number of simultaneous connections that can be opened by a worker process.

http {
    include       /etc/nginx/mime.types; # Includes another file, or files matching the specified mask, into configuration. Included files should consist of syntactically correct directives and blocks.
    default_type  application/octet-stream; # Defines the default MIME type of a response. Mapping of file name extensions to MIME types can be set with the types directive.

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    # The ngx_http_log_module module writes request logs in the specified format.

    sendfile on;
    # Enables or disables the use of sendfile().

    tcp_nopush on;
    # Enables or disables the use of the TCP_NOPUSH socket option on FreeBSD or the TCP_CORK socket option on Linux. The options are enabled only when sendfile is used. Enabling the option allows sending the response header and the beginning of a file in one packet, on Linux and FreeBSD 4.*; sending a file in full packets.

    tcp_nodelay on;
    # Enables or disables the use of the TCP_NODELAY option. The option is enabled only when a connection is transitioned into the keep-alive state.

    keepalive_timeout  65;
    # The first parameter sets a timeout during which a keep-alive client connection will stay open on the server side. The zero value disables keep-alive client connections. 

    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_vary off;
    #gzip_buffers
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/rss+xml application/atom+xml text/javascript application/javascript application/json text/mathml;
    gzip_min_length  1000;
    gzip_disable     MSIE [1-6]\.;

    proxy_cache_path /tmp/nginx/cache levels=1:2 keys_zone=cache_zone_name:10m;
    # Sets the path and other parameters of a cache. Cache data are stored in files. The file name in a cache is a result of applying the MD5 function to the cache key

    upstream myapp {
        server http://127.0.0.1:4000;
        server http://127.0.0.1:5000;
    }

    server {
    # Sets configuration for a virtual server.
        client_max_body_size 20M;

        listen       80; # Sets the address and port for IP, 
        server_name  localhost; # Sets names of a virtual server

        #charset koi8-r;
        #access_log  /var/log/nginx/log/host.access.log  main;

        # Sets configuration depending on a request URI.

        location / {
            # Add cache debugging header
            add_header X-Cache-Status $upstream_cache_status;

            # Configure cache
            proxy_cache        cache_zone_name;
            proxy_cache_valid  any 1m;
            proxy_cache_key    $scheme$host$request_uri;
            proxy_cache_purge  PURGE from all;

            proxy_pass   http://myapp;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
        }

        location ~ /purge(/.*) {
            allow              127.0.0.1;
            deny               all;
            proxy_cache_purge  cache_zone_name $scheme$host$1$is_args$args;
        }
    }

}